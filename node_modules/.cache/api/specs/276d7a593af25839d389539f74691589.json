{
  "openapi": "3.0.0",
  "info": {
    "title": "PAKMS Service API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "description": "Sandbox PAKMS server",
      "url": "https://scl-sandbox.dev.clover.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://sandbox.dev.clover.com/oauth/authorize",
            "tokenUrl": "https://sandbox.dev.clover.com/oauth/token"
          }
        }
      }
    },
    "requestBodies": {
      "CreateTokenAssociationGroupRequest": {
        "description": "An object describing a request to create a token association group",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the group"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the group"
                }
              }
            }
          }
        }
      },
      "MergeGroupsRequest": {
        "description": "An object describing a request to merge several token association groups",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the group"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the group"
                },
                "existingGroupUuids": {
                  "description": "List of customer payment `source`s",
                  "items": {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "api_access_key": {
        "description": "API Access Key.",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Set to `true` if the API key is active."
          },
          "apiAccessKey": {
            "type": "string",
            "description": "API key associated with the merchant and developer application."
          },
          "createdTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "description": "Time when the API key was created."
          },
          "developerAppUuid": {
            "type": "string",
            "description": "Developer app Unique universal identifier (UUID)."
          },
          "merchantUuid": {
            "type": "string",
            "description": "Merchant Unique universal identifier (UUID) or mId."
          },
          "tokenAssociationGroupUuid": {
            "type": "string",
            "description": "Token association group UUID."
          },
          "modifiedTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "description": "Time when the API key was last updated."
          }
        }
      },
      "token_association_group": {
        "description": "Token Association Group",
        "properties": {
          "id": {
            "type": "string",
            "description": "id of the group"
          },
          "developerAppUuid": {
            "type": "string",
            "description": "id of the developer app associated with the group"
          },
          "name": {
            "type": "string",
            "description": "Name of the group"
          },
          "description": {
            "type": "string",
            "description": "Description of the group"
          }
        }
      },
      "token_association_groups": {
        "type": "array",
        "items": {
          "description": "Token Association Group",
          "properties": {
            "id": {
              "type": "string",
              "description": "id of the group"
            },
            "developerAppUuid": {
              "type": "string",
              "description": "id of the developer app associated with the group"
            },
            "name": {
              "type": "string",
              "description": "Name of the group"
            },
            "description": {
              "type": "string",
              "description": "Description of the group"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "OAuth2": []
    }
  ],
  "paths": {
    "/pakms/apikey": {
      "get": {
        "tags": [
          "KEYS"
        ],
        "operationId": "getApiKey",
        "summary": "Retrieve an API key",
        "x-clover-handler": "com.clover.pakms.handlers.api.GetApiKeyHandler",
        "description": "Retrieve the public API key associated with the specific merchant and developer app. The merchant UUID (mId) and app UUID are pulled from the authtoken used. If `AutoActivateOnGet` is `true`, an API key is generated (if one does not exist).",
        "parameters": [
          {
            "name": "tokenAssociationGroupUuid",
            "description": "Identifier of the token association group for this API key (reserved).",
            "in": "query",
            "required": false,
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response that returns the requested API key.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "API Access Key.",
                  "properties": {
                    "active": {
                      "type": "boolean",
                      "description": "Set to `true` if the API key is active."
                    },
                    "apiAccessKey": {
                      "type": "string",
                      "description": "API key associated with the merchant and developer application."
                    },
                    "createdTime": {
                      "type": "integer",
                      "format": "int64",
                      "nullable": true,
                      "description": "Time when the API key was created."
                    },
                    "developerAppUuid": {
                      "type": "string",
                      "description": "Developer app Unique universal identifier (UUID)."
                    },
                    "merchantUuid": {
                      "type": "string",
                      "description": "Merchant Unique universal identifier (UUID) or mId."
                    },
                    "tokenAssociationGroupUuid": {
                      "type": "string",
                      "description": "Token association group UUID."
                    },
                    "modifiedTime": {
                      "type": "integer",
                      "format": "int64",
                      "nullable": true,
                      "description": "Time when the API key was last updated."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": false,
    "samples-enabled": true
  }
}